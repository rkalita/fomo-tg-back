"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; } function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var _chunkKSEUZTKYjs = require('../chunk-KSEUZTKY.js');var _child_process = require('child_process');var _treekill = require('tree-kill'); var _treekill2 = _interopRequireDefault(_treekill);var c=class{constructor(){this.MAXIMUM_WAIT_TIME_SEC=75;this.READINESS_ENDPOINT="http://127.0.0.1:8070/";this.process=null}stop(){_optionalChain([this, 'access', _ => _.process, 'optionalAccess', _2 => _2.pid])&&_treekill2.default.call(void 0, this.process.pid)}async run(){await this.checkIfProcessIsUp()||(this.start(),await this.waitUntilProcessIsUp())}start(){let s=_child_process.spawn.call(void 0, "npx",["aptos","node","run-local-testnet","--force-restart","--assume-yes","--with-indexer-api"]);this.process=s,_optionalChain([s, 'access', _3 => _3.stderr, 'optionalAccess', _4 => _4.on, 'call', _5 => _5("data",r=>{let o=r.toString();console.log(o)})]),_optionalChain([s, 'access', _6 => _6.stdout, 'optionalAccess', _7 => _7.on, 'call', _8 => _8("data",r=>{let o=r.toString();console.log(o)})])}async waitUntilProcessIsUp(){let e=await this.checkIfProcessIsUp(),t=Date.now()/1e3,s=t;for(;!e&&t+this.MAXIMUM_WAIT_TIME_SEC>s;)await _chunkKSEUZTKYjs.b.call(void 0, 1e3),e=await this.checkIfProcessIsUp(),s=Date.now()/1e3;if(!e)throw new Error("Process failed to start");return!0}async checkIfProcessIsUp(){try{return(await fetch(this.READINESS_ENDPOINT)).status===200}catch (e2){return!1}}};var d=class{async init(e){let{network:t,profile:s}=e,r=["aptos","init",`--network=${_nullishCoalesce(t, () => ("local"))}`,`--profile=${_nullishCoalesce(s, () => ("default"))}`];return this.runCommand(r)}async compile(e){let{packageDirectoryPath:t,namedAddresses:s}=e,r=["aptos","move","compile","--package-dir",t,"--skip-fetch-latest-git-deps"],o=this.parseNamedAddresses(s);return r.push(...this.prepareNamedAddresses(o)),this.runCommand(r)}async test(e){let{packageDirectoryPath:t,namedAddresses:s}=e,r=["aptos","move","test","--package-dir",t,"--skip-fetch-latest-git-deps"],o=this.parseNamedAddresses(s);return r.push(...this.prepareNamedAddresses(o)),this.runCommand(r)}async publish(e){let{packageDirectoryPath:t,namedAddresses:s,profile:r}=e,o=["aptos","move","publish","--package-dir",t,"--skip-fetch-latest-git-deps",`--profile=${_nullishCoalesce(r, () => ("default"))}`],a=this.parseNamedAddresses(s);return o.push(...this.prepareNamedAddresses(a)),this.runCommand(o)}async runCommand(e){return new Promise((t,s)=>{let r=_child_process.spawn.call(void 0, "npx",e);r.stdout.pipe(process.stdout),r.stderr.pipe(process.stderr),process.stdin.pipe(r.stdin),r.on("close",o=>{o===0?t(!0):s(new Error(`Child process exited with code ${o}`))})})}prepareNamedAddresses(e){let t=e.size,s=[];if(t===0)return s;s.push("--named-addresses");let r=0;return e.forEach((o,a)=>{r+=1;let n=`${a}=${o.toString()}`;r<t-1&&(n+=","),s.push(n)}),s}parseNamedAddresses(e){let t=new Map;return Object.keys(e).forEach(s=>{let r=e[s];t.set(s,r)}),t}};exports.LocalNode = c; exports.Move = d;
//# sourceMappingURL=index.js.map